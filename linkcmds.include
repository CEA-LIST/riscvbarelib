/*
 * MIT License
 *
 * Copyright (c) 2019 Cesar Fuguet Tortolero
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */
/**
 * @file   linkcmds.include
 * @author Cesar Fuguet Tortolero
 */
SECTIONS
{
    .text :
    {
        . = ALIGN(8) ;
        _stext = . ;
        *(.start .start.*)
        KEEP(*(.vectors .vector.*)) ;
        *(.text .text.*) ;
        *(.rodata .rodata* .srodata .srodata*) ;
        . = ALIGN(8) ;
    } > RAM_CACHED

    .preinit_array    :
    {
        PROVIDE_HIDDEN (__preinit_array_start = .);
        KEEP (*(.preinit_array))
        PROVIDE_HIDDEN (__preinit_array_end = .);
    } > RAM_CACHED
    .init_array    :
    {
        PROVIDE_HIDDEN (__init_array_start = .);
        KEEP (*(SORT_BY_INIT_PRIORITY(.init_array.*) SORT_BY_INIT_PRIORITY(.ctors.*)))
        KEEP (*(.init_array .ctors))
        PROVIDE_HIDDEN (__init_array_end = .);
    } > RAM_CACHED
    .fini_array    :
    {
        PROVIDE_HIDDEN (__fini_array_start = .);
        KEEP (*(SORT_BY_INIT_PRIORITY(.fini_array.*) SORT_BY_INIT_PRIORITY(.dtors.*)))
        KEEP (*(.fini_array .dtors))
        PROVIDE_HIDDEN (__fini_array_end = .);
    } > RAM_CACHED
    .ctors          :
    {
        KEEP (*(SORT(.ctors.*)))
        KEEP (*(.ctors))
    } > RAM_CACHED
    .dtors          :
    {
        KEEP (*(SORT(.dtors.*)))
        KEEP (*(.dtors))
        _etext = . ;
    } > RAM_CACHED

    .tohost ALIGN(1000) :
    {
        *(.tohost) ;
    } > RAM_CACHED

    .data.cached :
    {
        . = ALIGN(8) ;
        _sdata_cached = . ;
        . = ALIGN(8) ;
        *(.data.cached) ;
        . = ALIGN(8) ;
        _edata_cached = . ;
    } > RAM_CACHED

    .heap ALIGN(64) (NOLOAD) :
    {
        _end = . ;
    } > RAM_CACHED

    .data :
    {
        . = ALIGN(8) ;
        _sdata = . ;
        *(.data .data.* .sdata .sdata*) ;
        . = ALIGN(8) ;
        _edata = . ;
    } > RAM_UNCACHED

    .bss (NOLOAD) :
    {
        . = ALIGN(8) ;
        _sbss = . ;
        *(.bss .bss.* .sbss .sbss*) ;
        *(COMMON) ;
        . = ALIGN(8) ;
        _ebss = . ;
    } > RAM_UNCACHED
}
